C:\Users\Philippe\AppData\Local\Programs\Python\Python35\python.exe "C:/Users/Philippe/Documents/ULg/Aalto/Data mining/Assignement/Project/git/code/main.py" --graphName all
Importing graph ca-AstroPh ...

Performing grid search on ca-AstroPh ...
=======================================

Algorithm 1 with params = {'L': 'unormalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 2, 'name': 'ca-AstroPh', 'bindex': 48.95548232139865, 'n_ratio_cut': 5.2678592954526255, 'score': 15.408301388423737, 'var_C_size': 6017188.1364, 'max_C_size': 17529, 'conductance': 15.70922746264818, 'expansion': 0.5625}

Algorithm 2 with params = {'L': 'unormalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 5, 'name': 'ca-AstroPh', 'bindex': 34.756744679662624, 'n_ratio_cut': 11.563749067983547, 'score': 61.03790788466314, 'var_C_size': 3154371.0564000006, 'max_C_size': 12445, 'conductance': 61.96296149909357, 'expansion': 3.2755344418052257}

Algorithm 3 with params = {'L': 'unormalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 5, 'name': 'ca-AstroPh', 'bindex': 42.68558342177289, 'n_ratio_cut': 15.032672782388728, 'score': 89.02542032035032, 'var_C_size': 4554413.856400001, 'max_C_size': 15284, 'conductance': 90.23817088621796, 'expansion': 4.909090909090909}

Algorithm 4 with params = {'L': 'normalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 4, 'name': 'ca-AstroPh', 'bindex': 47.695916885438194, 'n_ratio_cut': 4.52548357802576, 'score': 44.52043533451442, 'var_C_size': 5705609.616399999, 'max_C_size': 17078, 'conductance': 46.086978432670115, 'expansion': 5.450980392156863}

Algorithm 5 with params = {'L': 'normalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 9, 'name': 'ca-AstroPh', 'bindex': 27.62665475060046, 'n_ratio_cut': 14.399003293254903, 'score': 158.12372538505858, 'var_C_size': 1946695.6164000002, 'max_C_size': 9892, 'conductance': 158.69499340699545, 'expansion': 10.828877005347593}

Algorithm 6 with params = {'L': 'normalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 18, 'name': 'ca-AstroPh', 'bindex': 27.082053287158576, 'n_ratio_cut': 14.706326943279295, 'score': 186.21767186456563, 'var_C_size': 1850467.9363999998, 'max_C_size': 9697, 'conductance': 186.76802602607617, 'expansion': 13.320675105485233}

Algorithm 7 with params = {'L': 'normalized_random_walk', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 4, 'name': 'ca-AstroPh', 'bindex': 46.53410043009551, 'n_ratio_cut': 3.807869671491059, 'score': 39.606476186990704, 'var_C_size': 5427452.4163999995, 'max_C_size': 16662, 'conductance': 42.376321558360274, 'expansion': 7.642857142857143}

Algorithm 8 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 11, 'name': 'ca-AstroPh', 'bindex': 5.649891079707311, 'n_ratio_cut': 16.094344474913843, 'score': 287.5275266760688, 'var_C_size': 292743.2564000001, 'max_C_size': 2023, 'conductance': 287.5275266760688, 'expansion': 30.062563067608476}

Algorithm 9 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 25, 'name': 'ca-AstroPh', 'bindex': 6.272691727643411, 'n_ratio_cut': 17.936911217284205, 'score': 330.30981216065584, 'var_C_size': 295835.1764, 'max_C_size': 2246, 'conductance': 330.30981216065584, 'expansion': 31.113661202185792}

End of gridsearch: best parameters were {'L': 'unormalized', 'eigen_norm': None} with metrics = {'min_C_size': 2, 'name': 'ca-AstroPh', 'bindex': 48.95548232139865, 'n_ratio_cut': 5.2678592954526255, 'score': 15.408301388423737, 'var_C_size': 6017188.1364, 'max_C_size': 17529, 'conductance': 15.70922746264818, 'expansion': 0.5625}
Dumping output of ca-AstroPh to ..\results\ca-AstroPh.txt ...
Importing graph ca-CondMat ...

Performing grid search on ca-CondMat ...
=======================================

Algorithm 1 with params = {'L': 'unormalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 3, 'name': 'ca-CondMat', 'bindex': 95.39858634086973, 'n_ratio_cut': 10.14040002299671, 'score': 30.181199300186563, 'var_C_size': 4107975.4531, 'max_C_size': 20380, 'conductance': 30.502650426647488, 'expansion': 0.5925925925925926}

Algorithm 2 with params = {'L': 'unormalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 5, 'name': 'ca-CondMat', 'bindex': 29.892805317605205, 'n_ratio_cut': 23.000386241685764, 'score': 123.18795093369674, 'var_C_size': 668962.5531, 'max_C_size': 6386, 'conductance': 123.18795093369674, 'expansion': 3.4444444444444446}

Algorithm 3 with params = {'L': 'unormalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 12, 'name': 'ca-CondMat', 'bindex': 39.839910124982445, 'n_ratio_cut': 28.351202330320987, 'score': 165.1531986535969, 'var_C_size': 799800.1331000002, 'max_C_size': 8511, 'conductance': 165.1531986535969, 'expansion': 5.7073170731707314}

Algorithm 4 with params = {'L': 'normalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 4, 'name': 'ca-CondMat', 'bindex': 92.45892430838366, 'n_ratio_cut': 11.579736011740797, 'score': 68.71172861149932, 'var_C_size': 3856961.4530999996, 'max_C_size': 19752, 'conductance': 69.74475829126021, 'expansion': 5.323529411764706}

Algorithm 5 with params = {'L': 'normalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 7, 'name': 'ca-CondMat', 'bindex': 14.890230772831531, 'n_ratio_cut': 22.142135794411807, 'score': 146.96638286731692, 'var_C_size': 286775.41309999995, 'max_C_size': 3181, 'conductance': 146.96638286731692, 'expansion': 4.699505649717514}

Algorithm 6 with params = {'L': 'normalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 18, 'name': 'ca-CondMat', 'bindex': 13.930627720825727, 'n_ratio_cut': 28.68137148300311, 'score': 208.27294245334522, 'var_C_size': 160595.39309999996, 'max_C_size': 2976, 'conductance': 208.27294245334522, 'expansion': 5.688622754491018}

Algorithm 7 with params = {'L': 'normalized_random_walk', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 4, 'name': 'ca-CondMat', 'bindex': 91.58826007583205, 'n_ratio_cut': 7.954829015986283, 'score': 39.329653767198444, 'var_C_size': 3784648.7530999994, 'max_C_size': 19566, 'conductance': 39.86282329554623, 'expansion': 1.5}

Algorithm 8 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 7, 'name': 'ca-CondMat', 'bindex': 10.457332771614475, 'n_ratio_cut': 24.305883563364944, 'score': 163.38996309317508, 'var_C_size': 174317.8731, 'max_C_size': 2234, 'conductance': 163.38996309317508, 'expansion': 5.8963165075034105}

Algorithm 9 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 17, 'name': 'ca-CondMat', 'bindex': 10.81308804943126, 'n_ratio_cut': 28.56793226179294, 'score': 208.84748982670757, 'var_C_size': 126620.43309999997, 'max_C_size': 2310, 'conductance': 208.84748982670757, 'expansion': 9.340963855421688}

End of gridsearch: best parameters were {'L': 'unormalized', 'eigen_norm': None} with metrics = {'min_C_size': 3, 'name': 'ca-CondMat', 'bindex': 95.39858634086973, 'n_ratio_cut': 10.14040002299671, 'score': 30.181199300186563, 'var_C_size': 4107975.4531, 'max_C_size': 20380, 'conductance': 30.502650426647488, 'expansion': 0.5925925925925926}
Dumping output of ca-CondMat to ..\results\ca-CondMat.txt ...
Importing graph ca-GrQc ...

Performing grid search on ca-GrQc ...
=======================================

Algorithm 1 with params = {'L': 'unormalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 12, 'name': 'ca-GrQc', 'bindex': 1.9942279942279941, 'n_ratio_cut': 0.03707431847460927, 'score': 0.08357452966714905, 'var_C_size': 4272489.0, 'max_C_size': 4146, 'conductance': 0.16666666666666666, 'expansion': 0.08333333333333333}

Algorithm 2 with params = {'L': 'unormalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 18, 'name': 'ca-GrQc', 'bindex': 1.9913419913419914, 'n_ratio_cut': 0.13233669496937492, 'score': 0.39057971014492754, 'var_C_size': 4247721.0, 'max_C_size': 4140, 'conductance': 0.7777777777777778, 'expansion': 0.3888888888888889}

Algorithm 3 with params = {'L': 'unormalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 18, 'name': 'ca-GrQc', 'bindex': 1.9913419913419914, 'n_ratio_cut': 0.13233669496937492, 'score': 0.39057971014492754, 'var_C_size': 4247721.0, 'max_C_size': 4140, 'conductance': 0.7777777777777778, 'expansion': 0.3888888888888889}

Algorithm 4 with params = {'L': 'normalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 35, 'name': 'ca-GrQc', 'bindex': 1.9831649831649831, 'n_ratio_cut': 0.006989662848340977, 'score': 0.23051176327916564, 'var_C_size': 4177936.0, 'max_C_size': 4123, 'conductance': 0.45714285714285713, 'expansion': 0.22857142857142856}

Algorithm 5 with params = {'L': 'normalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 50, 'name': 'ca-GrQc', 'bindex': 1.975949975949976, 'n_ratio_cut': 0.021203470213209535, 'score': 0.5263291139240507, 'var_C_size': 4116841.0, 'max_C_size': 4108, 'conductance': 1.04, 'expansion': 0.52}

Algorithm 6 with params = {'L': 'normalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 50, 'name': 'ca-GrQc', 'bindex': 1.975949975949976, 'n_ratio_cut': 0.021203470213209535, 'score': 0.5263291139240507, 'var_C_size': 4116841.0, 'max_C_size': 4108, 'conductance': 1.04, 'expansion': 0.52}

Algorithm 7 with params = {'L': 'normalized_random_walk', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 16, 'name': 'ca-GrQc', 'bindex': 1.9923039923039922, 'n_ratio_cut': 0.00418695886285628, 'score': 0.06274142926122646, 'var_C_size': 4255969.0, 'max_C_size': 4142, 'conductance': 0.125, 'expansion': 0.0625}

Algorithm 8 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 73, 'name': 'ca-GrQc', 'bindex': 1.964886964886965, 'n_ratio_cut': 0.0302938231314599, 'score': 0.3764725608222531, 'var_C_size': 4024036.0, 'max_C_size': 4085, 'conductance': 0.7397260273972602, 'expansion': 0.3698630136986301}

Algorithm 9 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 73, 'name': 'ca-GrQc', 'bindex': 1.964886964886965, 'n_ratio_cut': 0.0302938231314599, 'score': 0.3764725608222531, 'var_C_size': 4024036.0, 'max_C_size': 4085, 'conductance': 0.7397260273972602, 'expansion': 0.3698630136986301}

End of gridsearch: best parameters were {'L': 'normalized_random_walk', 'eigen_norm': None} with metrics = {'min_C_size': 16, 'name': 'ca-GrQc', 'bindex': 1.9923039923039922, 'n_ratio_cut': 0.00418695886285628, 'score': 0.06274142926122646, 'var_C_size': 4255969.0, 'max_C_size': 4142, 'conductance': 0.125, 'expansion': 0.0625}
Dumping output of ca-GrQc to ..\results\ca-GrQc.txt ...
Importing graph ca-HepPh ...

Performing grid search on ca-HepPh ...
=======================================

Algorithm 1 with params = {'L': 'unormalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 4, 'name': 'ca-HepPh', 'bindex': 24.38414851838629, 'n_ratio_cut': 1.5791139117235071, 'score': 5.578631496828499, 'var_C_size': 4576206.6944, 'max_C_size': 10928, 'conductance': 5.7834689573076306, 'expansion': 0.5}

Algorithm 2 with params = {'L': 'unormalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 8, 'name': 'ca-HepPh', 'bindex': 15.385130310603355, 'n_ratio_cut': 4.90892617599635, 'score': 25.52594921656124, 'var_C_size': 2058161.8944000003, 'max_C_size': 6895, 'conductance': 25.970374303874483, 'expansion': 1.9227304227304227}

Algorithm 3 with params = {'L': 'unormalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 8, 'name': 'ca-HepPh', 'bindex': 22.35362370581935, 'n_ratio_cut': 5.084762341871852, 'score': 26.134287342952906, 'var_C_size': 3821650.6144, 'max_C_size': 10018, 'conductance': 26.968326039572176, 'expansion': 1.7777777777777777}

Algorithm 4 with params = {'L': 'normalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 5, 'name': 'ca-HepPh', 'bindex': 23.781685112459833, 'n_ratio_cut': 1.3264616255768376, 'score': 15.447609012915708, 'var_C_size': 4343918.6944, 'max_C_size': 10658, 'conductance': 16.691784740859497, 'expansion': 3.016260162601626}

Algorithm 5 with params = {'L': 'normalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 12, 'name': 'ca-HepPh', 'bindex': 5.453409496608354, 'n_ratio_cut': 4.406134363020233, 'score': 41.52253422992128, 'var_C_size': 555817.2544, 'max_C_size': 2444, 'conductance': 41.52253422992128, 'expansion': 4.744044602128738}

Algorithm 6 with params = {'L': 'normalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 27, 'name': 'ca-HepPh', 'bindex': 4.772848982506248, 'n_ratio_cut': 5.449706166041182, 'score': 54.2794784596087, 'var_C_size': 347164.3744, 'max_C_size': 2139, 'conductance': 54.2794784596087, 'expansion': 6.062833432128038}

Algorithm 7 with params = {'L': 'normalized_random_walk', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 5, 'name': 'ca-HepPh', 'bindex': 13.504105676544091, 'n_ratio_cut': 1.236391241072506, 'score': 14.082196397032165, 'var_C_size': 2073416.5344000002, 'max_C_size': 6052, 'conductance': 14.26609369190517, 'expansion': 2.372340425531915}

Algorithm 8 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 26, 'name': 'ca-HepPh', 'bindex': 2.653070332024277, 'n_ratio_cut': 6.229600092181144, 'score': 110.34273735188003, 'var_C_size': 162773.0144, 'max_C_size': 1189, 'conductance': 110.34273735188003, 'expansion': 26.9832285115304}

Algorithm 9 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 51, 'name': 'ca-HepPh', 'bindex': 2.6307568725455193, 'n_ratio_cut': 6.639212087713568, 'score': 103.73892085350987, 'var_C_size': 165934.6144, 'max_C_size': 1179, 'conductance': 103.73892085350987, 'expansion': 21.684545454545454}

End of gridsearch: best parameters were {'L': 'unormalized', 'eigen_norm': None} with metrics = {'min_C_size': 4, 'name': 'ca-HepPh', 'bindex': 24.38414851838629, 'n_ratio_cut': 1.5791139117235071, 'score': 5.578631496828499, 'var_C_size': 4576206.6944, 'max_C_size': 10928, 'conductance': 5.7834689573076306, 'expansion': 0.5}
Dumping output of ca-HepPh to ..\results\ca-HepPh.txt ...
Importing graph ca-HepTh ...

Performing grid search on ca-HepTh ...
=======================================

Algorithm 1 with params = {'L': 'unormalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 5, 'name': 'ca-HepTh', 'bindex': 19.43736976151887, 'n_ratio_cut': 0.9374297838316241, 'score': 2.7221503005804437, 'var_C_size': 3337466.4900000007, 'max_C_size': 8395, 'conductance': 2.842033535015991, 'expansion': 0.3333333333333333}

Algorithm 2 with params = {'L': 'unormalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 9, 'name': 'ca-HepTh', 'bindex': 12.27830516323223, 'n_ratio_cut': 3.0733662132774446, 'score': 11.842721774292375, 'var_C_size': 1445507.5900000003, 'max_C_size': 5303, 'conductance': 12.090870752792, 'expansion': 1.15}

Algorithm 3 with params = {'L': 'unormalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 14, 'name': 'ca-HepTh', 'bindex': 17.02014355174809, 'n_ratio_cut': 3.4515944381397197, 'score': 13.52108817764763, 'var_C_size': 2523786.99, 'max_C_size': 7351, 'conductance': 14.07616374945562, 'expansion': 1.2380952380952381}

Algorithm 4 with params = {'L': 'normalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 5, 'name': 'ca-HepTh', 'bindex': 19.286871961102108, 'n_ratio_cut': 1.1989932532729954, 'score': 6.353106594128265, 'var_C_size': 3283207.49, 'max_C_size': 8330, 'conductance': 6.703297579613368, 'expansion': 0.9523809523809523}

Algorithm 5 with params = {'L': 'normalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 16, 'name': 'ca-HepTh', 'bindex': 11.442463533225284, 'n_ratio_cut': 3.044169503749372, 'score': 14.43826489674708, 'var_C_size': 1172216.7900000003, 'max_C_size': 4942, 'conductance': 14.620536826894366, 'expansion': 1.5627615062761506}

Algorithm 6 with params = {'L': 'normalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 18, 'name': 'ca-HepTh', 'bindex': 11.993517017828202, 'n_ratio_cut': 3.1860618322830736, 'score': 15.231325268393624, 'var_C_size': 1238913.2900000003, 'max_C_size': 5180, 'conductance': 15.455606605832857, 'expansion': 1.5120593692022264}

Algorithm 7 with params = {'L': 'normalized_random_walk', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 5, 'name': 'ca-HepTh', 'bindex': 19.247510997916184, 'n_ratio_cut': 0.7307418761805309, 'score': 3.901003878391326, 'var_C_size': 3269144.6900000004, 'max_C_size': 8313, 'conductance': 4.170057168418993, 'expansion': 0.8285714285714286}

Algorithm 8 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 25, 'name': 'ca-HepTh', 'bindex': 2.938180134290345, 'n_ratio_cut': 5.713337794168402, 'score': 33.60227893633283, 'var_C_size': 179753.09, 'max_C_size': 1269, 'conductance': 33.60227893633283, 'expansion': 6.516546762589928}

Algorithm 9 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 25, 'name': 'ca-HepTh', 'bindex': 4.846029173419773, 'n_ratio_cut': 4.676050197865579, 'score': 26.07647859742343, 'var_C_size': 340584.08999999997, 'max_C_size': 2093, 'conductance': 26.07647859742343, 'expansion': 4.702370500438982}

End of gridsearch: best parameters were {'L': 'unormalized', 'eigen_norm': None} with metrics = {'min_C_size': 5, 'name': 'ca-HepTh', 'bindex': 19.43736976151887, 'n_ratio_cut': 0.9374297838316241, 'score': 2.7221503005804437, 'var_C_size': 3337466.4900000007, 'max_C_size': 8395, 'conductance': 2.842033535015991, 'expansion': 0.3333333333333333}
Dumping output of ca-HepTh to ..\results\ca-HepTh.txt ...
Importing graph Oregon-1 ...

Performing grid search on Oregon-1 ...
=======================================

Algorithm 1 with params = {'L': 'unormalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 6, 'name': 'Oregon-1', 'bindex': 4.807872539831303, 'n_ratio_cut': 0.31424035986909427, 'score': 0.7219871623562948, 'var_C_size': 16515723.2, 'max_C_size': 10260, 'conductance': 0.9397521031635976, 'expansion': 0.2627118644067797}

Algorithm 2 with params = {'L': 'unormalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 187, 'name': 'Oregon-1', 'bindex': 3.4892221180880973, 'n_ratio_cut': 0.5276920362417441, 'score': 1.7418072016327808, 'var_C_size': 7680684.4, 'max_C_size': 7446, 'conductance': 1.928760627756621, 'expansion': 0.5741626794258373}

Algorithm 3 with params = {'L': 'unormalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 187, 'name': 'Oregon-1', 'bindex': 3.550140581068416, 'n_ratio_cut': 0.5225351834345393, 'score': 1.7345357358682663, 'var_C_size': 8027939.2, 'max_C_size': 7576, 'conductance': 1.9272758487276411, 'expansion': 0.6081504702194357}

Algorithm 4 with params = {'L': 'normalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 10, 'name': 'Oregon-1', 'bindex': 4.677600749765698, 'n_ratio_cut': 1.4260137695283013, 'score': 20.355271590578383, 'var_C_size': 15406316.8, 'max_C_size': 9982, 'conductance': 27.914850343962378, 'expansion': 18.482758620689655}

Algorithm 5 with params = {'L': 'normalized', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 188, 'name': 'Oregon-1', 'bindex': 3.3861293345829426, 'n_ratio_cut': 0.3660187525611255, 'score': 1.1923912497404046, 'var_C_size': 7348666.8, 'max_C_size': 7226, 'conductance': 1.3398030190223849, 'expansion': 0.32870022539444027}

Algorithm 6 with params = {'L': 'normalized', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized...
Computing eigens ...
Performing kmean ...
{'min_C_size': 189, 'name': 'Oregon-1', 'bindex': 3.3926897844423616, 'n_ratio_cut': 0.3672260265825825, 'score': 1.1932623229263246, 'var_C_size': 7370498.8, 'max_C_size': 7240, 'conductance': 1.34054901976765, 'expansion': 0.3263993948562784}

Algorithm 7 with params = {'L': 'normalized_random_walk', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 10, 'name': 'Oregon-1', 'bindex': 4.670103092783505, 'n_ratio_cut': 0.2848536840387809, 'score': 0.7485883899524839, 'var_C_size': 15344007.6, 'max_C_size': 9966, 'conductance': 0.9452852843935837, 'expansion': 0.2551440329218107}

Algorithm 8 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l1'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 322, 'name': 'Oregon-1', 'bindex': 2.5290534208059983, 'n_ratio_cut': 0.8817708187796977, 'score': 2.9539991374226195, 'var_C_size': 3690610.8, 'max_C_size': 5397, 'conductance': 2.965240816982676, 'expansion': 1.366060606060606}

Algorithm 9 with params = {'L': 'normalized_random_walk', 'eigen_norm': 'l2'}:
-------------------------------------------------------

Computing laplacian of type normalized_random_walk...
Computing eigens ...
Performing kmean ...
{'min_C_size': 330, 'name': 'Oregon-1', 'bindex': 2.794751640112465, 'n_ratio_cut': 0.8341081662982244, 'score': 2.566109117499641, 'var_C_size': 4412480.4, 'max_C_size': 5964, 'conductance': 2.6595181337162215, 'expansion': 1.2}

End of gridsearch: best parameters were {'L': 'unormalized', 'eigen_norm': None} with metrics = {'min_C_size': 6, 'name': 'Oregon-1', 'bindex': 4.807872539831303, 'n_ratio_cut': 0.31424035986909427, 'score': 0.7219871623562948, 'var_C_size': 16515723.2, 'max_C_size': 10260, 'conductance': 0.9397521031635976, 'expansion': 0.2627118644067797}
Dumping output of Oregon-1 to ..\results\Oregon-1.txt ...
Importing graph soc-Epinions1 ...

Performing grid search on soc-Epinions1 ...
=======================================

Algorithm 1 with params = {'L': 'unormalized', 'eigen_norm': None}:
-------------------------------------------------------

Computing laplacian of type unormalized...
Computing eigens ...
